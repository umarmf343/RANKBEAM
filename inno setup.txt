RankBeam Packaging & Paystack Licensing Guide
=============================================

This document captures the minimum steps required to ship the RankBeam desktop
installer now that licensing is backed by Paystack subscriptions. Pair it with
`Paystack licence Guide.txt` for webhook, server, and billing automation details.

1. Verify Required Project Files
--------------------------------
Before compiling the installer ensure the repository contains the following
artifacts. Rebuild anything missing.

| Purpose | Location | Notes |
| --- | --- | --- |
| Windows desktop binary | `bin/rankbeam.exe` | Build with `GOOS=windows GOARCH=amd64 go build -o bin/rankbeam.exe ./cmd/app`. |
| Inno Setup script | `installer/rankbeam.iss` | Updated to collect the subscriber's email and Paystack-issued key. |
| Desktop icon (optional) | `assets/app.ico`, `assets/app.png` | Replace with branded artwork if desired. |
| Licensing API source | `license-api/` | Node.js service that manages Paystack subscriptions, hardware fingerprints, and licence validation. |
| Paystack operations playbook | `Paystack licence Guide.txt` | Contains webhook, environment, and rotation procedures. |

2. Build the Desktop Executable (Windows)
----------------------------------------
Run the following from the project root inside PowerShell (or any shell with the
Go toolchain installed):

```powershell
$env:CGO_ENABLED = "1"
GOOS=windows GOARCH=amd64 go build -o bin/rankbeam.exe ./cmd/app
```

Launch `bin/rankbeam.exe` once to confirm the UI boots and prompts for a license
if the machine is not activated.

3. Configure the Installer Script
---------------------------------
Open `installer/rankbeam.iss` in Inno Setup 6+ and review the header constants:

```pascal
#define LicenseStorageSubDir "RankBeam"
#define LicenseFileName "license.json"
```

The script no longer contacts the license API directly. Instead it asks the user
for:

* the email address that holds an active Paystack subscription, and
* the current 30-day license key that the webhook emailed to them.

The script stores the details in `%LOCALAPPDATA%\RankBeam\license.json` so the
app can validate it on first launch.

4. Compile the Installer
------------------------
1. Launch **Inno Setup Compiler**.
2. Open `installer/rankbeam.iss`.
3. Verify the `[Files]` section points to the freshly built `bin/rankbeam.exe`.
4. Choose **Build â†’ Compile** (or press **F9**).
5. Retrieve the generated `rankbeam-setup.exe` from the `installer/` directory.

Test the installer on a clean Windows VM. Expect the Paystack activation screen
during installation; ensure entering a known-good key allows the app to launch.

5. Ship the Licensing API
-------------------------
Deploy the Node.js service located in `license-api/` (see `cpanel.txt` and
`Paystack licence Guide.txt`). Minimum steps:

* Install dependencies (`npm install --production`) and create the SQLite data
  directory.
* Configure environment variables: `PORT`, `DATABASE_PATH`,
  `PAYSTACK_SECRET_KEY`, `PAYSTACK_PLAN_CODE`, `PAYSTACK_WEBHOOK_SECRET`, and
  `LICENSE_API_TOKEN`.
* Register the webhook URL `https://your-domain/paystack/webhook` in Paystack
  so renewals update the licence ledger.
* Provide HTTPS access to `/paystack/validate`, `/paystack/subscribe`, and
  `/paystack/deactivate`. The desktop app calls these endpoints with the machine
  fingerprint.

6. Desktop Environment Variables
--------------------------------
When packaging production builds export the API settings so the app can validate
the stored license file:

```powershell
$env:LICENSE_API_URL = "https://licensing.yourdomain.com"
$env:LICENSE_API_TOKEN = "installer-shared-secret"
go build -o bin/rankbeam.exe ./cmd/app
```

These values match the ones configured on your server. The UI surfaces clear
errors if they are absent during development builds.

For end-to-end instructions (Paystack plans, webhook payloads, manual override
procedures, and rotation checklists) consult `Paystack licence Guide.txt`.
